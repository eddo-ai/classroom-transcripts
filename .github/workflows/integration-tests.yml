name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002

    env:
      AZURE_STORAGE_ACCOUNT: devstoreaccount1
      AZURE_STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;
      ASSEMBLYAI_API_KEY: ${{ secrets.ASSEMBLYAI_API_KEY }}
      AZURE_FUNCTION_KEY: ${{ secrets.AZURE_FUNCTION_KEY }}
      WEBSITE_HOSTNAME: ${{ secrets.WEBSITE_HOSTNAME }}
      PYTHONUNBUFFERED: 1

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install -r requirements.txt
          uv pip install -r src/functions/requirements.txt
          uv pip install pytest pytest-azurepipelines pytest-cov pytest-xdist

      - name: Download test audio file
        run: |
          mkdir -p tests/fixtures/audio
          curl -L -o tests/fixtures/audio/short-classroom-sample.m4a https://github.com/eddo-ai/classroom-transcripts/raw/main/tests/fixtures/audio/short-classroom-sample.m4a || \
          curl -L -o tests/fixtures/audio/short-classroom-sample.m4a https://github.com/eddo-ai/classroom-transcripts/raw/develop/tests/fixtures/audio/short-classroom-sample.m4a || \
          echo "Creating dummy audio file for testing" > tests/fixtures/audio/short-classroom-sample.m4a

      - name: Create test directories
        run: |
          mkdir -p logs
          mkdir -p test-results
          mkdir -p test-results/coverage-html

      - name: Run integration tests
        run: |
          pytest tests/ -v -m "integration" \
            --junitxml=test-results/junit.xml \
            --cov=src \
            --cov-report=xml:test-results/coverage.xml \
            --cov-report=html:test-results/coverage-html \
            -n auto
